<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>LongMethod:AddFoodScreen.kt$@ExperimentalComposeUiApi @Composable fun AddFoodScreen( modifier: Modifier = Modifier, addFood: (Food) -&gt; Unit, navigateBack: () -&gt; Unit, uploadState: ResultOf&lt;Unit&gt;?, timeManager: TimeManager )</ID>
    <ID>LongMethod:AddFoodScreenContent.kt$@ExperimentalComposeUiApi @Composable private fun TextInputs( modifier: Modifier = Modifier, name: String, setName: (String) -&gt; Unit, nameError: ErrorState, amount: String, setAmount: (String) -&gt; Unit, amountError: ErrorState, expires: String, expiryError: ErrorState, keyboardController: SoftwareKeyboardController?, showDatePicker: Boolean, setShowDatePicker: (Boolean) -&gt; Unit, setSelectedDate: (year: Int, month: Int, day: Int) -&gt; Unit )</ID>
    <ID>LongMethod:AddUserScreen.kt$@Composable fun AddUserScreen( screenState: ResultOf&lt;Unit&gt;?, navigateBack: () -&gt; Unit, addUser: (User) -&gt; Unit )</ID>
    <ID>LongMethod:FoodListScreen.kt$@ExperimentalFoundationApi @ExperimentalMaterialApi @Composable fun FoodListScreen( foodList: List&lt;FoodUi&gt;, onClickFab: () -&gt; Unit, setFoodQuantity: (food: FoodUi) -&gt; Unit, deleteFood: (food: FoodUi) -&gt; Unit, screenState: ResultOf&lt;Unit&gt;, deleteAllFoods: () -&gt; Unit, setFoodListSort: (FoodListScreenViewModel.Companion.SortFoods) -&gt; Unit, navigateToAddUserScreen: () -&gt; Unit, userList: List&lt;User&gt;, selectedUsers: List&lt;User&gt;, onLongPressUserListItem: (User) -&gt; Unit, clearSelectedUserIds: () -&gt; Unit, deleteAllSelectedUsers: () -&gt; Unit, )</ID>
    <ID>LongParameterList:AddFoodScreen.kt$( name: String, amount: String, expiryTimeStamp: Long, keyboardController: SoftwareKeyboardController?, addFood: (Food) -&gt; Unit, showError: (Boolean) -&gt; Unit, setNameError: (ErrorState) -&gt; Unit, setAmountError: (ErrorState) -&gt; Unit, setExpiryError: (ErrorState) -&gt; Unit )</ID>
    <ID>LongParameterList:AddFoodScreenContent.kt$( modifier: Modifier = Modifier, name: String, setName: (String) -&gt; Unit, nameError: ErrorState, amount: String, setAmount: (String) -&gt; Unit, amountError: ErrorState, expires: String, expiryError: ErrorState, keyboardController: SoftwareKeyboardController?, showDatePicker: Boolean, setShowDatePicker: (Boolean) -&gt; Unit, setSelectedDate: (year: Int, month: Int, day: Int) -&gt; Unit )</ID>
    <ID>LongParameterList:AddFoodScreenContent.kt$( modifier: Modifier = Modifier, name: String, setName: (String) -&gt; Unit, nameError: ErrorState, amount: String, setAmount: (String) -&gt; Unit, amountError: ErrorState, expiryInDays: String, expiryError: ErrorState, keyboardController: SoftwareKeyboardController?, addFood: () -&gt; Unit, error: Boolean, showDatePicker: Boolean, setShowDatePicker: (Boolean) -&gt; Unit, setSelectedDate: (year: Int, month: Int, day: Int) -&gt; Unit )</ID>
    <ID>LongParameterList:FoodListScreen.kt$( foodList: List&lt;FoodUi&gt;, onClickFab: () -&gt; Unit, setFoodQuantity: (food: FoodUi) -&gt; Unit, deleteFood: (food: FoodUi) -&gt; Unit, screenState: ResultOf&lt;Unit&gt;, deleteAllFoods: () -&gt; Unit, setFoodListSort: (FoodListScreenViewModel.Companion.SortFoods) -&gt; Unit, navigateToAddUserScreen: () -&gt; Unit, userList: List&lt;User&gt;, selectedUsers: List&lt;User&gt;, onLongPressUserListItem: (User) -&gt; Unit, clearSelectedUserIds: () -&gt; Unit, deleteAllSelectedUsers: () -&gt; Unit, )</ID>
    <ID>LongParameterList:FoodListScreenViewModel.kt$FoodListScreenViewModel$( private val getAllFoodsSortedByNameUseCase: GetAllFoodsSortedByNameUseCase, private val getAllFoodsSortedByExpiryUseCase: GetAllFoodsSortedByExpiryUseCase, private val getAllFoodsSortedByAmountUseCase: GetAllFoodsSortedByAmountUseCase, private val deleteFoodUseCase: DeleteFoodUseCase, private val updateFoodUseCase: UpdateFoodUseCase, private val deleteAllFoodsUseCase: DeleteAllFoodsUseCase, private val getAllUsersUseCase: GetAllUsersUseCase, private val deleteUserUseCase: DeleteUserUseCase, private val foodUiMapper: FoodUiMapper )</ID>
    <ID>LongParameterList:UserList.kt$( modifier: Modifier = Modifier, userList: List&lt;User&gt;, onClickAddUser: () -&gt; Unit, onClickUser: (User) -&gt; Unit, onLongPressUser: (User) -&gt; Unit, selectedUsers: List&lt;User&gt;, onClickDeleteUsers: () -&gt; Unit, )</ID>
    <ID>TooGenericExceptionCaught:AddUserScreenViewModel.kt$AddUserScreenViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:FoodListScreenViewModel.kt$FoodListScreenViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:FoodRepositoryImpl.kt$FoodRepositoryImpl$e: Exception</ID>
    <ID>TooGenericExceptionCaught:UserRepositoryImpl.kt$UserRepositoryImpl$e: Exception</ID>
    <ID>TooManyFunctions:FoodListScreenViewModel.kt$FoodListScreenViewModel : ViewModel</ID>
  </CurrentIssues>
</SmellBaseline>
